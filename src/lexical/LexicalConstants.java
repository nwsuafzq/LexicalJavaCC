/* Generated By:JavaCC: Do not edit this line. LexicalConstants.java */
package lexical;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexicalConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int MULTIPLY = 7;
  /** RegularExpression Id. */
  int DIVIDE = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int ELSE = 10;
  /** RegularExpression Id. */
  int INT = 11;
  /** RegularExpression Id. */
  int RETURN = 12;
  /** RegularExpression Id. */
  int VOID = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int MAIN = 15;
  /** RegularExpression Id. */
  int IDENTIFIER = 16;
  /** RegularExpression Id. */
  int LETTER = 17;
  /** RegularExpression Id. */
  int UNDERSCORE = 18;
  /** RegularExpression Id. */
  int COMMA = 19;
  /** RegularExpression Id. */
  int SEMICOLON = 20;
  /** RegularExpression Id. */
  int COLON = 21;
  /** RegularExpression Id. */
  int LEFTPARENTHESES = 22;
  /** RegularExpression Id. */
  int RIGHTPARENTHESES = 23;
  /** RegularExpression Id. */
  int EQUAL = 24;
  /** RegularExpression Id. */
  int CONSTANT = 25;
  /** RegularExpression Id. */
  int DIGIT = 26;
  /** RegularExpression Id. */
  int LB = 27;
  /** RegularExpression Id. */
  int RB = 28;
  /** RegularExpression Id. */
  int LM = 29;
  /** RegularExpression Id. */
  int RM = 30;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"if\"",
    "\"else\"",
    "\"int\"",
    "\"return\"",
    "\"void\"",
    "\"while\"",
    "\"main\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "\"_\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "<CONSTANT>",
    "<DIGIT>",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
  };

}
